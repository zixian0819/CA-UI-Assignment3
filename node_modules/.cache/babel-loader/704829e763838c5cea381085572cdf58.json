{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Downloads/dbxlb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mac/Downloads/dbxlb/src/ToDoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoForm(props) {\n  _s();\n\n  var _useState = useState(\" \"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var inputRef = useRef(null);\n  useEffect(function () {\n    inputRef.current.focus();\n  });\n\n  var handleChange = function handleChange(e) {\n    setInput(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-lists\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a todo\",\n      value: input,\n      name: \"text\",\n      className: \"todo-input\",\n      onChange: handleChange,\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button\",\n      children: \" Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoForm, \"BewtkSAa3NMZAMKvBcxcoa+Tlh4=\");\n\n_c = ToDoForm;\nexport default ToDoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"sources":["/Users/mac/Downloads/dbxlb/src/ToDoForm.js"],"names":["React","useState","useEffect","useRef","ToDoForm","props","input","setInput","inputRef","current","focus","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,kBAA0BJ,QAAQ,CAAC,GAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AAGAD,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFQ,CAAT;;AAGA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,CAAD,EAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AAEAX,IAAAA,KAAK,CAACY,QAAN,CAAe;AACbC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADS;AAEbC,MAAAA,IAAI,EAAEhB;AAFO,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GATD;;AAUA,sBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEQ,YAAvC;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,YAFd;AAGE,MAAA,KAAK,EAAET,KAHT;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,SAAS,EAAC,YALZ;AAME,MAAA,QAAQ,EAAEK,YANZ;AAOE,MAAA,GAAG,EAAEH;AAPP;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvCQJ,Q;;KAAAA,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nfunction ToDoForm(props) {\n  const [input, setInput] = useState(\" \");\n  const inputRef = useRef(null);\n\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n\n    setInput(\"\");\n  };\n  return (\n    <form className=\"todo-lists\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Add a todo\"\n        value={input}\n        name=\"text\"\n        className=\"todo-input\"\n        onChange={handleChange}\n        ref={inputRef}\n      />\n      <button className=\"todo-button\"> Add todo</button>\n\n    </form>\n  );\n}\n\nexport default ToDoForm;\n"]},"metadata":{},"sourceType":"module"}