{"ast":null,"code":"import _toConsumableArray from \"/Users/mac/Downloads/dbxlb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/mac/Downloads/dbxlb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mac/Downloads/dbxlb/src/ToDoLists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ToDoForm from \"./ToDoForm\";\nimport ToDo from \"./ToDo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoLists() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sortType = _useState4[0],\n      setSortType = _useState4[1];\n\n  var addToDo = function addToDo(todo) {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    var newToDos = [todo].concat(_toConsumableArray(todos));\n    setTodos(newToDos);\n  };\n\n  var removeTodo = function removeTodo(id) {\n    var removeArr = _toConsumableArray(todos).filter(function (todo) {\n      return todo.id !== id;\n    });\n\n    setTodos(removeArr);\n  };\n\n  useEffect(function () {\n    var sortArray = function sortArray(type) {\n      var types = {\n        text1: \"text\",\n        text2: \"text\"\n      };\n      var sortProperty = types[type];\n\n      if (type === \"text1\") {\n        var sorted = _toConsumableArray(todos).sort(function (a, b) {\n          if (a[sortProperty] < b[sortProperty]) {\n            return -1;\n          }\n\n          if (a[sortProperty] > b[sortProperty]) {\n            return 1;\n          }\n\n          return 0;\n        });\n\n        setTodos(sorted);\n      }\n\n      if (type === \"text2\") {\n        var _sorted = _toConsumableArray(todos).sort(function (a, b) {\n          if (a[sortProperty] < b[sortProperty]) {\n            return 1;\n          }\n\n          if (a[sortProperty] > b[sortProperty]) {\n            return -1;\n          }\n\n          return 0;\n        });\n\n        setTodos(_sorted);\n      }\n    };\n\n    sortArray(sortType);\n  }, [sortType]);\n\n  var completeTodo = function completeTodo(id) {\n    var updatedTodos = todos.map(function (todo) {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Plan for Today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      onSubmit: addToDo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"normal-button\",\n      onChange: function onChange(e) {\n        return setSortType(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sort\",\n        children: \"Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"text1\",\n        children: \"A-Z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"text2\",\n        children: \"Z-A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToDoLists, \"/TeRN0E/EydBsDSEyY+G0K/HrEg=\");\n\n_c = ToDoLists;\nexport default ToDoLists;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoLists\");","map":{"version":3,"sources":["/Users/mac/Downloads/dbxlb/src/ToDoLists.js"],"names":["React","useState","useEffect","ToDoForm","ToDo","ToDoLists","todos","setTodos","sortType","setSortType","addToDo","todo","text","test","newToDos","removeTodo","id","removeArr","filter","sortArray","type","types","text1","text2","sortProperty","sorted","sort","a","b","completeTodo","updatedTodos","map","isComplete","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ToDoForm from \"./ToDoForm\";\n\nimport ToDo from \"./ToDo\";\n\nfunction ToDoLists() {\n  const [todos, setTodos] = useState([]);\n  const [sortType, setSortType] = useState(\"\");\n\n  const addToDo = (todo) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newToDos = [todo, ...todos];\n    setTodos(newToDos);\n  };\n  const removeTodo = (id) => {\n    const removeArr = [...todos].filter((todo) => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  useEffect(() => {\n    const sortArray = (type) => {\n      const types = {\n        text1: \"text\",\n        text2: \"text\"\n      };\n      const sortProperty = types[type];\n      if (type === \"text1\") {\n        const sorted = [...todos].sort(function (a, b) {\n          if (a[sortProperty] < b[sortProperty]) {\n            return -1;\n          }\n          if (a[sortProperty] > b[sortProperty]) {\n            return 1;\n          }\n          return 0;\n        });\n        setTodos(sorted);\n      }\n      if (type === \"text2\") {\n        const sorted = [...todos].sort(function (a, b) {\n          if (a[sortProperty] < b[sortProperty]) {\n            return 1;\n          }\n          if (a[sortProperty] > b[sortProperty]) {\n            return -1;\n          }\n          return 0;\n        });\n        setTodos(sorted);\n      }\n    };\n\n    sortArray(sortType);\n  }, [sortType]);\n\n  const completeTodo = (id) => {\n    let updatedTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  console.log(todos);\n\n  return (\n    <div>\n      <h1> Plan for Today?</h1>\n      <ToDoForm onSubmit={addToDo} />\n      <ToDo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} />\n      <select\n        className=\"normal-button\"\n        onChange={(e) => setSortType(e.target.value)}\n      >\n        <option value=\"sort\">Sort</option>\n        <option value=\"text1\">A-Z</option>\n        <option value=\"text2\">Z-A</option>\n      </select>\n    </div>\n  );\n}\n\nexport default ToDoLists;\n"]},"metadata":{},"sourceType":"module"}