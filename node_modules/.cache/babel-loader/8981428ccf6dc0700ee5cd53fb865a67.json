{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Downloads/dbxlb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/mac/Downloads/dbxlb/src/Timer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Timer() {\n  _s();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  var _useState3 = useState(\"false\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  function changeTime() {\n    setShow(false);\n    this.intervalID = setInterval(function () {\n      setTime(function (oldValue) {\n        var newTime = oldValue + +1;\n        return newTime;\n      });\n    }, 1000);\n  }\n\n  function stopChangeTime() {\n    setShow(true);\n    clearInterval(this.intervalID);\n  }\n\n  console.log(show);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"time: \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"normal-button\",\n        onClick: function onClick() {\n          return show === true ? changeTime() : stopChangeTime();\n        },\n        children: [show ? \"Start\" : \"Stop\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timer, \"tXxXC3PukH19Wys/HY0En55RJ64=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/mac/Downloads/dbxlb/src/Timer.js"],"names":["useState","Timer","time","setTime","show","setShow","changeTime","intervalID","setInterval","oldValue","newTime","stopChangeTime","clearInterval","console","log"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,kBAAwBD,QAAQ,CAAC,CAAD,CAAhC;AAAA;AAAA,MAAOE,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBH,QAAQ,CAAC,OAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AACA,WAASC,UAAT,GAAsB;AACpBD,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,SAAKE,UAAL,GAAkBC,WAAW,CAAC,YAAM;AAClCL,MAAAA,OAAO,CAAC,UAACM,QAAD,EAAc;AACpB,YAAMC,OAAO,GAAGD,QAAQ,GAAG,CAAC,CAA5B;AACA,eAAOC,OAAP;AACD,OAHM,CAAP;AAID,KAL4B,EAK1B,IAL0B,CAA7B;AAMD;;AACD,WAASC,cAAT,GAA0B;AACxBN,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAO,IAAAA,aAAa,CAAC,KAAKL,UAAN,CAAb;AACD;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,sBACE;AAAA,4BACE;AAAA,2BAAWF,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAOE,IAAI,KAAK,IAAT,GAAgBE,UAAU,EAA1B,GAA+BK,cAAc,EAApD;AAAA,SAFX;AAAA,mBAIGP,IAAI,GAAG,OAAH,GAAa,MAJpB,EAI4B,GAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA9BQH,K;;KAAAA,K;AAgCT,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\n\nfunction Timer() {\n  const [time, setTime] = useState(0);\n  const [show, setShow] = useState(\"false\");\n  function changeTime() {\n    setShow(false);\n    this.intervalID = setInterval(() => {\n      setTime((oldValue) => {\n        const newTime = oldValue + +1;\n        return newTime;\n      });\n    }, 1000);\n  }\n  function stopChangeTime() {\n    setShow(true);\n    clearInterval(this.intervalID);\n  }\n  console.log(show);\n  return (\n    <div>\n      <h1>time: {time}</h1>\n      <div>\n        <button\n          className=\"normal-button\"\n          onClick={() => (show === true ? changeTime() : stopChangeTime())}\n        >\n          {show ? \"Start\" : \"Stop\"}{\" \"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}